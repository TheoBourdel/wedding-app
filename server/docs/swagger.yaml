basePath: /
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  model.Role:
    enum:
    - admin
    - provider
    - marry
    type: string
    x-enum-varnames:
    - Admin
    - Provider
    - Marry
  model.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      firstname:
        type: string
      id:
        type: integer
      lastname:
        type: string
      password:
        type: string
      role:
        $ref: '#/definitions/model.Role'
      updatedAt:
        type: string
    type: object
  model.Wedding:
    properties:
      address:
        type: string
      budget:
        type: number
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
      profileImage:
        type: string
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/model.User'
      userID:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: API pour le challenge de l'ESGI
  title: Challenge API
  version: "1.0"
paths:
  /signin:
    post:
      consumes:
      - application/json
      description: Sign in a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Invalid password
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Sign in
      tags:
      - auth
  /signout:
    delete:
      consumes:
      - application/json
      description: Sign out a user
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Sign out
      tags:
      - auth
  /signup:
    post:
      consumes:
      - application/json
      description: Sign up a new user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Sign up
      tags:
      - auth
  /users:
    get:
      consumes:
      - application/json
      description: Get a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      summary: Get all users
      tags:
      - users
  /wedding:
    post:
      responses: {}
  /weddings:
    get:
      consumes:
      - application/json
      description: Get a list of all weddings
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Wedding'
            type: array
      summary: Get all weddings
      tags:
      - weddings
  /weddings/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a wedding by its ID
      parameters:
      - description: Wedding ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid wedding ID
          schema:
            type: string
        "404":
          description: Wedding not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete a wedding by ID
      tags:
      - weddings
    get:
      consumes:
      - application/json
      description: Get a wedding by its ID
      parameters:
      - description: Wedding ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Wedding'
        "404":
          description: Wedding not found
          schema:
            type: string
      summary: Get a wedding by ID
      tags:
      - weddings
    put:
      consumes:
      - application/json
      description: Update a wedding by its ID
      parameters:
      - description: Wedding ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated wedding object
        in: body
        name: wedding
        required: true
        schema:
          $ref: '#/definitions/model.Wedding'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid wedding ID or request body
          schema:
            type: string
        "404":
          description: Wedding not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update a wedding by ID
      tags:
      - weddings
swagger: "2.0"
