basePath: /
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  model.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      firstname:
        type: string
      id:
        type: integer
      lastname:
        type: string
      password:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API pour le challenge de l'ESGI
  title: Challenge API
  version: "1.0"
paths:
  /signin:
    post:
      consumes:
      - application/json
      description: Sign in a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Invalid password
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Sign in
      tags:
      - auth
  /signout:
    delete:
      consumes:
      - application/json
      description: Sign out a user
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Sign out
      tags:
      - auth
  /signup:
    post:
      consumes:
      - application/json
      description: Sign up a new user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: Sign up
      tags:
      - auth
  /users:
    get:
      consumes:
      - application/json
      description: Get a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      summary: Get all users
      tags:
      - users
swagger: "2.0"
